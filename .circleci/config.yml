version: 2
jobs:
  sonarqube:
    docker:
      - image: newtmitch/sonar-scanner
    environment:
      SONAR_SCANNER_OPTS: -Xms1024M -Xmx3584M
    steps:
      - checkout:
          path: /root/src
      - run:
          name: Sonar scan
          command: |-
            if [[ -n "$CIRCLE_PULL_REQUEST" ]] && [[ "$CIRCLE_BRANCH" =~ .+/.+ ]]; then
              EXTRA_ARGS="-Dsonar.analysis.mode=preview \
                          -Dsonar.github.oauth=$SONAR_GITHUB_TOKEN \
                          -Dsonar.github.repository=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME \
                          -Dsonar.github.pullRequest=$(echo $CIRCLE_PULL_REQUEST | cut -d / -f 7)"
            fi
            sonar-scanner \
              -Dsonar.host.url=$SONAR_HOST \
              -Dsonar.login=$SONAR_LOGIN \
              -Dsonar.projectKey=BONGO \
              -Dsonar.projectName="Bongo" \
              -Dsonar.projectVersion=1 \
              -Dsonar.links.ci=$CIRCLE_BUILD_URL \
              -Dsonar.links.scm=$CIRCLE_REPOSITORY_URL \
              -Dsonar.branch=$CIRCLE_BRANCH \
              -Dsonar.scm.provider=git \
              $EXTRA_ARGS

  build_and_test:
    working_directory: /var/www/html
    docker:
      - image: youseeu/docker-php-node
      - image: mysql:5.6
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    steps:
      # Installation
      - run:
          name: Install System Packages
          command: apt-get -y install php7.0-zip
      - run:
          name: Install Composer
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && \
            php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('https://composer.github.io/installer.sig'))) { echo 'Installer verified'; } else { echo 'Installer invalid'; unlink('composer-setup.php'); } echo PHP_EOL;"
            php composer-setup.php && \
            php -r "unlink('composer-setup.php');" && \
            chmod +x ./composer.phar && \
            mv ./composer.phar /usr/local/bin/composer

      # Dependencies
      - checkout
      - restore_cache:
          key: bongo-{{ .Branch }}-{{ checksum "./composer.lock" }}-v1
      - run: composer install --prefer-dist --no-interaction
      # Force pulling Simple PHPUnit dependencies to be able to cache them as well
      - run: ./vendor/bin/simple-phpunit --version
      - save_cache:
          key: bongo-{{ .Branch }}-{{ checksum "./composer.lock" }}-v1
          paths:
            - '/root/.composer/cache'
            - './vendor'

      # Database
      - run: ./bin/console doctrine:database:create --env=test
      - run: ./bin/console doctrine:schema:create --env=test
#      - run: ./bin/console doctrine:fixtures:load --append --no-interaction

      # Testing
      - run:
          name: Run Unit tests
          command: |
            vendor/bin/simple-phpunit
          when: always

workflows:
  version: 2
  test:
    jobs:
      - build_and_test
  quality:
    jobs:
      - sonarqube